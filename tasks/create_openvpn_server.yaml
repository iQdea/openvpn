- name: "Openvpn server | install packages"
  become: true
  apt:
    name:
      - openvpn
      - easy-rsa
    state: "present"
    update_cache: "yes"

- name: "Openvpn server | add variables for server certificate authority"
  template:
    src: "{{ easy_rsa_vars_template }}"
    dest: "{{ easy_rsa_dir }}/vars"

- name: "Openvpn server | init-pki "
  command:
    cmd: "{{ easy_rsa_binary }}/easyrsa init-pki"
    chdir: "{{ easy_rsa_dir }}"
    creates: "{{ easy_rsa_dir }}/pki"

- name: "Openvpn server | create Diffie-Hellman.pem with cryptography protocol data"
  command:
    cmd: "{{ easy_rsa_binary }}/easyrsa gen-dh"
    chdir: "{{ easy_rsa_dir }}"
    creates: "{{ easy_rsa_dir }}/pki/dh.pem"

- name: "Openvpn server | create crl.pem with restricted ssl-certs list"
  command:
    cmd: "{{ easy_rsa_binary }}/easyrsa gen-crl"
    chdir: "{{ easy_rsa_dir }}"
    creates: "{{ easy_rsa_dir }}/pki/crl.pem"

- name: "Openvpn server | create HMAC tls-crypt key to prevent Dos and flud"
  command:
    cmd: "openvpn --genkey --secret {{ easy_rsa_dir }}/pki/ta.key"
    chdir: "{{ easy_rsa_dir }}"
    creates: "{{ easy_rsa_dir }}/pki/ta.key"

- name: "Openvpn server | create request for sign server cert"
  command:
    cmd: "{{ easy_rsa_binary }}/easyrsa gen-req {{ openvpn_server_common_name }} nopass"
    chdir: "{{ easy_rsa_dir }}"
    creates: "{{ easy_rsa_dir }}/pki/reqs/{{ openvpn_server_common_name }}.req"
  environment:
    EASYRSA_BATCH: "yes"

- name: "Openvpn server | copy request cert for signing"
  copy:
    src: "{{ easy_rsa_dir }}/pki/reqs/{{ openvpn_server_common_name }}.req"
    dest: "/tmp/{{ openvpn_server_common_name }}.req"
    remote_src: "yes"


